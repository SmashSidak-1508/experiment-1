import { useEffect } from 'react';
import useWebSocket from 'react-use-websocket';

const useMediSearchClient = (apiKey, eventHandlers) => {
  const backendUrl = "wss://public.backend.medisearch.io:443/ws/medichat/api";

  const {
    sendJsonMessage,
    getWebSocket,
  } = useWebSocket(backendUrl, {
    shouldReconnect: (_) => true,
    reconnectAttempts: 10,
    reconnectInterval: 3000,
    onMessage: (message) => {
      const payload = JSON.parse(message.data);
      const handler = eventHandlers[payload.event];
      if (handler) {
        handler(payload);
      } else {
        console.warn(`Handler for event: ${payload.event} not implemented.`);
      }
    },
  });

  const sendUserMessage = (conversation,
    conversation_id,
    language = "English") => {
    const payload = {
      event: "user_message",
      conversation,
      key: apiKey,
      id: conversation_id,
      settings: {
        language: language,
      }
    };
    sendJsonMessage(payload);
  };

  const interruptGeneration = () => {
    const payload = {
      event: "interrupt",
      key: apiKey,
    };
    sendJsonMessage(payload);
  };

  const closeConnection = () => {
    const socket = getWebSocket();
    if (socket && socket.readyState === WebSocket.OPEN) {
      const payload = {
        event: "close",
        key: apiKey,
      };
      sendJsonMessage(payload);
    }
  };

  useEffect(() => {
    return () => {
      closeConnection();
    };
  }, []);

  return {
    sendUserMessage,
    interruptGeneration,
    closeConnection,
  };
};

export default useMediSearchClient;
